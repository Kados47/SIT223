pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the application...'
                // Assume a tool like Maven is pre-configured in Jenkins.
                sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running Unit and Integration Tests...'
                // Again, assuming JUnit is integrated with Maven
                sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Performing Code Analysis...'
                // Assuming SonarQube is set up in Jenkins
                sh 'mvn sonar:sonar'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Running Security Scan...'
                // Assuming OWASP Dependency-Check is set up in Jenkins
                sh 'dependency-check.sh'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to Staging Environment...'
                // Assuming AWS CLI or similar tools are set up
                sh 'aws deploy ...' // Replace with actual deployment command
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running Integration Tests on Staging...'
                // Assuming Selenium or a similar tool is available
                sh 'selenium-runner ...' // Replace with actual testing command
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to Production...'
                // Assuming AWS CLI or similar tools are set up
                sh 'aws deploy ...' // Replace with actual deployment command
            }
        }
    }

    post {
        always {
            mail to: 'kadostrayford@gmail.com',
                 subject: "Pipeline: ${currentBuild.fullDisplayName}",
                 body: "Pipeline ${currentBuild.fullDisplayName} finished with status: ${currentBuild.currentResult}\n\n" +
                       "Check the Jenkins console output for more details: ${env.BUILD_URL}\n"
        }
    }
}
